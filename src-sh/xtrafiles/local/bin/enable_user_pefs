#!/bin/sh
# Helper script to enable encryption (PEFS) on a users home directory
# Author: Kris Moore
# License: BSD

PEFSDBDIR="/var/db/pefs"

# Check if we can safely enable PEFS on this system
if [ ! -e "/boot/kernel/pefs.ko" ] ; then
   echo "Error: Requires PEFS in base system!"
   exit 1
fi

USER="$1"
USERPW="$2"

if [ -z "$USER" -o -z "$USERPW" ] ; then
   echo "Usage: ${0} <username> <key>"
   exit 1
fi

USERHOMEDIR=`cat /etc/passwd | grep "^${USER}:" | cut -d ':' -f 6`
if [ -z "$USERHOMEDIR" -o ! -d "${USERHOMEDIR}" ] ; then
   echo "Invalid USERHOMEDIR: $USERHOMEDIR"
   exit 1
fi

if [ "${USERHOMEDIR}" = "/" ] ; then
   echo "Invalid HOMEDIR = / "
   exit 1
fi

if [ "$USERHOMEDIR" != "`realpath ${USERHOMEDIR}`" ] ; then
  NEWDIR=`realpath $USERHOMEDIR`
  echo "Updating sym-linked home dir ${USERHOMEDIR} -> ${NEWDIR}"
  OLDLINE=`cat /etc/master.passwd | grep "^${USER}:" | cut -d ':' -f 4-`
  NEWLINE=`echo $OLDLINE | sed "s|:${USERHOMEDIR}:|:${NEWDIR}:|g"`
  sed -i '.bak' "s|${OLDLINE}|${NEWLINE}|g" /etc/master.passwd
  pwd_mkdb -p /etc/master.passwd
  USERHOMEDIR=`realpath $USERHOMEDIR`
fi

# Check if PEFS is enabled here
if [ -e "${USERHOMEDIR}/.pefs.db" ] ; then
   if [ ! -e "${USERHOMEDIR}/.profile" ] ; then
      echo "ERROR: PEFS is already enabled on ${USERHOMEDIR}, but directory is still encrypted!"
      echo "Add your PEFS key to ${USERHOMDIR} before trying again."
      exit 1
   fi
fi

echo "Encrypting ${USERHOMEDIR}"

mkdir ${USERHOMEDIR}.$$

echo "Moving homedir contents ${USERHOMEDIR} -> ${USERHOMEDIR}.$$"
mv ${USERHOMEDIR}/* ${USERHOMEDIR}.$$/
mv ${USERHOMEDIR}/.* ${USERHOMEDIR}.$$/

# If already had pefs enabled, remove old pefs.db file
if [ -e ${USERHOMEDIR}.$$/.pefs.db ] ; then
   rm ${USERHOMEDIR}.$$/.pefs.db
fi

mount | grep -q "on ${USERHOMEDIR} (pefs"
if [ $? -ne 0 ] ; then
  chown ${USER}:${USER} ${USERHOMEDIR}
  pefs mount ${USERHOMEDIR} ${USERHOMEDIR}
else
  pefs flushkeys ${USERHOMEDIR}
fi

echo "${USERPW}" | pefs addkey -v -j - ${USERHOMEDIR}
echo "${USERPW}" | pefs addchain -v -j - -Z ${USERHOMEDIR}

mv ${USERHOMEDIR}/.pefs.db /tmp/.pefs.db.$$

# Copy files back to homedir
echo "Moving homedir contents back from ${USERHOMEDIR}.$$ -> ${USERHOMEDIR}"
mv ${USERHOMEDIR}.$$/* ${USERHOMEDIR}/
mv ${USERHOMEDIR}.$$/.* ${USERHOMEDIR}/

umount -f ${USERHOMEDIR}

mv /tmp/.pefs.db.$$ ${USERHOMEDIR}/.pefs.db
chown ${USER}:${USER} ${USERHOMEDIR}/.pefs.db

pefs mount ${USERHOMEDIR} ${USERHOMEDIR}
rm -rf "${USERHOMEDIR}.$$"


# Make sure the DBDIR exists
if [ ! -d "${PEFSDBDIR}" ]; then
  mkdir -p ${PEFSDBDIR}
fi

# Save the directory to auto-mount at boot
grep -q -e "^${USERHOMEDIR}\$" ${PEFSDBDIR}
if [ $? -ne 0 ] ; then 
  echo "${USERHOMEDIR}" >> ${PEFSDBDIR}/auto_mounts
fi

# Copy /etc/pam.d/ template files
cp /usr/local/share/pcbsd/pefs/other /etc/pam.d/other
cp /usr/local/share/pcbsd/pefs/system /etc/pam.d/system
